{"version":3,"file":"static/js/257.4774b1b6.chunk.js","mappings":"8KACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCWjN,EARmB,SAACA,GAChB,OACIC,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,UAAWC,EAAUC,GAAI,YAAcP,EAAMQ,GAAGN,SAAA,CAAC,IAAEF,EAAMS,KAAK,QAGnF,ECDA,EANgB,SAACT,GACb,OACIC,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAUJ,SAAEF,EAAMU,SAE1C,E,sCCFMC,GAAeC,EAAAA,EAAAA,GAAiB,KAkBtC,GAF4BC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACb,GACpB,OACIG,EAAAA,EAAAA,MAAA,QAAMY,SAAUf,EAAMgB,aAAad,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACR,KAAK,iBACLS,YAAY,qBACZC,UAAWC,EAAAA,GACXC,SAAW,CAACC,EAAAA,EAAUX,QAEjCV,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,aAGxB,ICYA,EAxBgB,SAACF,GACb,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI3B,EAAAA,EAAAA,KAAC4B,EAAU,CAACpB,KAAMmB,EAAEnB,MAAWmB,EAAEpB,GAAK,IAC/EsB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI/B,EAAAA,EAAAA,KAACgC,EAAO,CAACvB,QAASsB,EAAEtB,SAAcsB,EAAExB,GAAK,IAMxF,OAAQL,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAUJ,SAAA,EAC9BD,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAeJ,SAE1BuB,KAGLtB,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAWJ,SAAA,EAEvBD,EAAAA,EAAAA,KAAA,OAAAC,SAAM4B,KACN7B,EAAAA,EAAAA,KAACiC,EAAmB,CAACnB,SAbT,SAACoB,GACjBnC,EAAMoC,YAAYD,EAAOE,eAC7B,SAcJ,E,oBCLA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAACgB,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,GAASC,EAAAA,EAAAA,GAAmBJ,GAChC,EAER,IAKIK,EAAAA,EAFJ,CAGEC,E,kJCvBEC,EAA6B,SAACrB,GAAK,MAAM,CACzCsB,OAAQtB,EAAMuB,KAAKD,OACtB,EAEYH,EAAmB,SAACK,GAAe,IACtCC,EAAiB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAKlB,OALkBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,SAAAC,MACnB,WACI,OAAKC,KAAK3D,MAAM6C,QAET5C,EAAAA,EAAAA,KAAC8C,GAASa,EAAAA,EAAAA,GAAA,GAAKD,KAAK3D,SAFGC,EAAAA,EAAAA,KAAC4D,EAAAA,GAAQ,CAACtD,GAAI,UAGhD,KAACyC,CAAA,CALkB,CAASc,EAAAA,WAQhC,OAAOvB,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS,EAC/C,C","sources":["webpack://first_app/./src/components/Dilogs/Dialogs.module.css?4058","components/Dilogs/DialogItem/DialogItem.jsx","components/Dilogs/Message/Message.jsx","components/Dilogs/AddMessageForm/AddMessageForm.jsx","components/Dilogs/Dialogs.jsx","components/Dilogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__5lGKg\",\"dialogsItems\":\"Dialogs_dialogsItems__CtqEs\",\"active\":\"Dialogs_active__51bgb\",\"dialog\":\"Dialogs_dialog__fhCeZ\",\"messages\":\"Dialogs_messages__4qf7q\",\"message\":\"Dialogs_message__WdDbq\"};","import React from 'react';\nimport s from '../Dialogs.module.css'\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return (\n        <div>\n            <NavLink className={s.dialog} to={'/dialogs/' + props.id}> {props.name} </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from '../Dialogs.module.css'\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n}\n\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {TextArea} from \"../../common/FormsControl/FormsControl\";\nimport {maxLengthCreator, required} from \"../../Util/Validator/validators\";\n\nconst maxLength100 = maxLengthCreator(100);\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name='newMessageBody'\n                       placeholder='Enter your message'\n                       component={TextArea}\n                       validate={ [required, maxLength100] }/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>)\n}\n\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageBody'})(AddMessageForm)\n\nexport default AddMessageReduxForm","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport AddMessageReduxForm from \"./AddMessageForm/AddMessageForm\";\n\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id}/>);\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n    return (<div className={s.dialogs}>\n        <div className={s.dialogsItems}>\n\n            {dialogsElements}\n\n        </div>\n        <div className={s.messages}>\n\n            <div>{messagesElements}</div>\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\n        </div>\n    </div>)\n};\n\nexport default Dialogs;","import React from 'react';\nimport {sendMessageCreator} from \"../../Redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(withAuthRedirect(Dialogs))\n//\n// export default DialogsContainer;","import React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth)return <Navigate to={'/login'}/>\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\n}"],"names":["props","_jsx","children","_jsxs","NavLink","className","s","to","id","name","message","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","TextArea","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","AddMessageReduxForm","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React"],"sourceRoot":""}